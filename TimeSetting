package me.foxtrot2400.timeplugin;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;
//import org.bukkit.entity.Player;
//import org.bukkit.Bukkit;
//import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
/**
 * Created by j on 3/20/17.
 */



public class Main extends JavaPlugin {
    //public static void main(String[] args);

    @Override
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {

        if (sender instanceof Player) {
            Player player = (Player) sender;
            if (cmd.getName().equalsIgnoreCase("aptime")) { // If the player typed /aptime then do the following...
                long rawTime = player.getWorld().getFullTime(); // get full server uptime for date compiling
                long rawdaytime = player.getWorld().getTime();  // get ticks relative to sunrise
                long time = rawdaytime/1000;              // Since there are ~24000 ticks in a day, this can be converted into military time by /1000
                long converteddaytime = time;
                // long converteddaytime = parseTime(); //Convert the time from military to normal person time (am/pm)
                long timeyear = rawTime / 8640000; //24000 ticks per day * 360 days per year = 8640000 ticks per year, take full uptime over this to find year
                long timemonth = rawTime / (720000 * timeyear); //8640000 ticks per year / 12 months * however many years its been = current month of the year, take full uptime over this to find month
                long timeday = (timemonth * 30); //103680000 ticks per month * 30.42 average days per month, take full uptime over this to find day

               /* if (timeyear < 10) {                 //These next few bits just make the date look more aestetially pleasing (xx/xx/175 -> xx/xx/0175)
                    String(timeyear) = "000" + timeyear;
                }
                else if(timeyear < 100 && timeyear >= 10) {
                    String(timeyear) = "00" + timeyear;
                }
                else if (timeyear >= 100 && timeyear < 1000) {
                    String(timeyear) = "0" + timeyear;
                }
                */
                //This takes the 2017 version of each day in the calendar to figure out the exact day of the month. Its not entirely accurate as that fluctuates a day or two, but it is about as accurate as I can get it
                //This might be the hard way but it's also the only way I know how to do it xP
                //You also may have noticed there is nothing for Janurary. This is because these are the first days of the month
                long month = timemonth;
                //long timeday;
                if(month == 2)
                {
                     timeday = timeday - 59;
                }
                if(month == 3)
                {
                    timeday = timeday - 90;
                }
                if(month == 4)
                {
                    timeday = timeday - 120;
                }
                if(month == 5)
                {
                    timeday = timeday - 151;
                }
                if(month == 6)
                {
                    timeday = timeday - 181;
                }
                if(month == 7)
                {
                    timeday = timeday - 212;
                }
                if(month == 8)
                {
                    timeday = timeday - 243;
                }
                if(month == 9)
                {
                    timeday = timeday - 274;
                }
                if(month == 10)
                {
                    timeday = timeday - 304;
                }
                if(month == 11)
                {
                    timeday = timeday - 335;
                }
                if(month == 12)
                {
                    timeday = timeday - 365;
                }

                //long dateTime = timemonth + "/" + timeday + "/" + timeyear;
                sender.sendMessage("Current Airship Pirates Date and Time (MM/DD/YY): " + timemonth + "/" + timeday + "/" + timeyear + " " + converteddaytime); //slap it all together
//the previous lines will find the time in ap time, and send it to the player
                return true;
            }
        } else {
            sender.sendMessage("You have to be a player to run this command.");
            return true;
        }

        return false;
    }




    public static String parseTime(long time) {
        long gameTime = time;
        long hours = gameTime / 1000 + 6;
        long minutes = (gameTime % 1000) * 60 / 1000;
        String ampm = "AM";
        if (hours >= 12) {
            hours -= 12;
            ampm = "PM";
        }

        if (hours >= 12) {
            hours -= 12;
            ampm = "AM";
        }

        if (hours == 0) hours = 12;

        String mm = "0" + minutes;
        mm = mm.substring(mm.length() - 2, mm.length());

        return hours + ":" + mm + " " + ampm;
    }
}
